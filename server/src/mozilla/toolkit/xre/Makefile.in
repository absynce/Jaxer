# ***** BEGIN LICENSE BLOCK *****
#  Version: GPL 3
# 
#  This program is licensed under the GNU General Public license, version 3 (GPL).
#  It is derived from Mozilla software and modified by Aptana, Inc.
#  Aptana, Inc. has elected to use and license the Mozilla software 
#  under the terms of the GPL, and licenses this file to you under the terms
#  of the GPL.
#  
#  Contributor(s): Aptana, Inc.
#  The portions modified by Aptana are Copyright (C) 2007-2008 Aptana, Inc.
#  All Rights Reserved.
# 
#  This program is distributed in the hope that it will be useful, but
#  AS-IS and WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE, TITLE, or
#  NONINFRINGEMENT. Redistribution, except as permitted by the GPL,
#  is prohibited.
# 
#  You can redistribute and/or modify this program under the terms of the GPL, 
#  as published by the Free Software Foundation.  You should
#  have received a copy of the GNU General Public License, Version 3 along
#  with this program; if not, write to the Free Software Foundation, Inc., 51
#  Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#  
#  Aptana provides a special exception to allow redistribution of this file
#  with certain other code and certain additional terms
#  pursuant to Section 7 of the GPL. You may view the exception and these
#  terms on the web at http://www.aptana.com/legal/gpl/.
#  
#  You may view the GPL, and Aptana's exception and additional terms in the file
#  titled license-jaxer.html in the main distribution folder of this program.
#  
#  Any modifications to this file must keep this entire header intact.
# 
# ***** END LICENSE BLOCK *****
# ***** BEGIN ORIGINAL ATTRIBUTION BLOCK *****
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications.
# Portions created by the Initial Developer are Copyright (C) 2001
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#  Brian Ryner <bryner@brianryner.com>
#  Benjamin Smedberg <benjamin@smedbergs.us>
#
# ***** END ORIGINAL ATTRIBUTION BLOCK *****

DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE = xulapp

ifndef JAXER

LIBRARY_NAME = xulapp_s
LIBXUL_LIBRARY = 1

endif

REQUIRES = \
	appcomps \
	toolkitcomps \
	appshell \
	chrome \
	content \
	docshell \
	dom \
	embed_base \
	embedcomponents \
	extensions \
	gfx \
	intl \
	js \
	necko \
	pref \
	profile \
	string \
	uriloader \
	widget \
	windowwatcher \
	xpcom \
	xpconnect \
	xpinstall \
	$(NULL)

ifdef MOZ_JPROF
REQUIRES += jprof
endif

ifdef NS_TRACE_MALLOC
REQUIRES += tracemalloc
endif

ifdef MOZ_CRASHREPORTER
REQUIRES += crashreporter
endif

FORCE_STATIC_LIB = 1

XPIDLSRCS = \
	nsINativeAppSupport.idl \
	$(NULL)

ifneq (,$(filter WINCE WINNT,$(OS_ARCH)))
XPIDLSRCS += nsIWinAppHelper.idl
endif

ifndef JAXER

CPPSRCS = \
	nsAppRunner.cpp \
	nsConsoleWriter.cpp \
	nsXREDirProvider.cpp \
	nsNativeAppSupportBase.cpp \
	nsAppData.cpp \
	nsSigHandlers.cpp \
	$(NULL)

ifdef MOZ_SPLASHSCREEN
ifeq ($(OS_ARCH),WINCE)
CPPSRCS += nsSplashScreenWin.cpp
else
CPPSRCS += nsSplashScreenDummy.cpp
endif
endif

DEFINES += -DIMPL_XREAPI

ifndef BUILD_STATIC_LIBS
CPPSRCS += nsEmbedFunctions.cpp
endif

ifdef MOZ_UPDATER
CPPSRCS += nsUpdateDriver.cpp
DEFINES += -DMOZ_UPDATER
endif

ifeq ($(MOZ_WIDGET_TOOLKIT),windows)
CPPSRCS += nsNativeAppSupportWin.cpp
DEFINES += -DWIN32_LEAN_AND_MEAN -DUNICODE -D_UNICODE
else
ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
CMMSRCS = nsNativeAppSupportCocoa.mm
else
ifeq ($(MOZ_WIDGET_TOOLKIT),os2)
CPPSRCS += nsNativeAppSupportOS2.cpp
else
ifeq ($(MOZ_WIDGET_TOOLKIT),beos)
CPPSRCS += nsNativeAppSupportBeOS.cpp
else
ifeq ($(MOZ_WIDGET_TOOLKIT),gtk2)
CPPSRCS += nsNativeAppSupportUnix.cpp
else
CPPSRCS += nsNativeAppSupportDefault.cpp
endif
endif
endif
endif
endif

ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
CMMSRCS += MacLaunchHelper.mm
CPPSRCS += nsCommandLineServiceMac.cpp
OS_CXXFLAGS += -fexceptions
endif
ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
CMMSRCS += MacApplicationDelegate.mm
endif

SHARED_LIBRARY_LIBS += ../profile/src/$(LIB_PREFIX)profile_s.$(LIB_SUFFIX)

ifdef MOZ_ENABLE_XREMOTE
SHARED_LIBRARY_LIBS += $(DEPTH)/widget/src/xremoteclient/$(LIB_PREFIX)xremote_client_s.$(LIB_SUFFIX)
LOCAL_INCLUDES += -I$(topsrcdir)/widget/src/xremoteclient
endif

ifdef MOZ_CRASHREPORTER
SHARED_LIBRARY_LIBS += $(DEPTH)/toolkit/crashreporter/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX)
ifeq ($(OS_ARCH),WINNT)
SHARED_LIBRARY_LIBS += \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/windows/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/windows/crash_generation/$(LIB_PREFIX)crash_generation_s.$(LIB_SUFFIX) \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/windows/$(LIB_PREFIX)breakpad_windows_common_s.$(LIB_SUFFIX)
endif

ifeq ($(OS_ARCH),Darwin)
SHARED_LIBRARY_LIBS += \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/$(LIB_PREFIX)minidump_file_writer_s.$(LIB_SUFFIX) \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/mac/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/$(LIB_PREFIX)breakpad_common_s.$(LIB_SUFFIX) \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/mac/$(LIB_PREFIX)breakpad_mac_common_s.$(LIB_SUFFIX)
endif

ifeq ($(OS_ARCH),Linux)
SHARED_LIBRARY_LIBS += \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/linux/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/$(LIB_PREFIX)minidump_file_writer_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/$(LIB_PREFIX)breakpad_common_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/linux/$(LIB_PREFIX)breakpad_linux_common_s.$(LIB_SUFFIX) \
  $(NULL)
endif

ifeq ($(OS_ARCH),SunOS)
SHARED_LIBRARY_LIBS += \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/solaris/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/$(LIB_PREFIX)minidump_file_writer_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/$(LIB_PREFIX)breakpad_common_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/solaris/$(LIB_PREFIX)breakpad_solaris_common_s.$(LIB_SUFFIX) \
  $(NULL)
endif
endif

ifdef ENABLE_TESTS
DIRS += test
endif

endif

include $(topsrcdir)/config/rules.mk

ifndef JAXER
ifdef BUILD_STATIC_LIBS
export::
	@$(PERL) -I$(MOZILLA_DIR)/config $(MOZILLA_DIR)/config/build-list.pl $(FINAL_LINK_COMP_NAMES) Apprunner
#	embedding/browser/gtk/src/Makefile.in sucks! we need to add an empty line to 
# FINAL_LINK_COMPS to keep the two lists in sync :-(
	@$(PERL) -I$(MOZILLA_DIR)/config $(MOZILLA_DIR)/config/build-list.pl $(FINAL_LINK_COMPS) ""
endif

LOCAL_INCLUDES += \
	-I$(srcdir) \
	-I$(srcdir)/../profile/src \
	-I$(topsrcdir)/config \
	$(NULL)

CXXFLAGS += $(TK_CFLAGS) $(MOZ_DBUS_GLIB_CFLAGS)

ifeq ($(MOZ_WIDGET_TOOLKIT),gtk2)
CXXFLAGS += $(MOZ_PANGO_CFLAGS)
endif

ifdef BUILD_STATIC_LIBS
DEFINES += -D_BUILD_STATIC_BIN
endif

DEFINES += \
  -DOS_TARGET=\"$(OS_TARGET)\" \
  -DMOZ_WIDGET_TOOLKIT=\"$(MOZ_WIDGET_TOOLKIT)\"

ifdef TARGET_XPCOM_ABI
DEFINES += \
	-DTARGET_XPCOM_ABI=\"$(TARGET_XPCOM_ABI)\" \
	-DTARGET_OS_ABI=\"$(OS_TARGET)_$(TARGET_XPCOM_ABI)\" \
	$(NULL)
endif

DEFINES += -DTOOLKIT_EM_VERSION=\"$(shell $(PERL) $(topsrcdir)/config/milestone.pl --topsrcdir=$(topsrcdir))\"

ifdef WRAP_SYSTEM_INCLUDES
DEFINES		+= -DWRAP_SYSTEM_INCLUDES
endif

ifeq ($(OS_ARCH),Linux)
ifneq (,$(findstring lib64,$(libdir)))
DEFINES     += -DHAVE_USR_LIB64_DIR
endif
endif

SOURCE_STAMP := $(shell cd $(topsrcdir) && hg identify 2>/dev/null | cut -f1 -d' ')
# strip a trailing slash from the repo URL because it's not always present,
# and we want to construct a working URL in buildconfig.html
# make+shell+sed = awful
_dollar=$$
SOURCE_REPO := $(shell cd $(topsrcdir) && hg showconfig paths.default 2>/dev/null | head -n1 | sed -e "s/^ssh:/http:/" -e "s/\/$(_dollar)//" )

ifdef SOURCE_STAMP
INIARGS = --sourcestamp=$(SOURCE_STAMP)
# extra sanity check for old versions of hg
# that don't support showconfig
ifeq (http,$(patsubst http%,http,$(SOURCE_REPO)))
INIARGS += --sourcerepo=$(SOURCE_REPO)
endif
endif

platform.ini: FORCE
	$(PYTHON) $(srcdir)/make-platformini.py --buildid=$(shell cat $(DEPTH)/config/buildid) $(INIARGS) $(topsrcdir)/config/milestone.txt > $@

GARBAGE += platform.ini

libs:: platform.ini
	$(INSTALL) $^ $(DIST)/bin

install::
	$(INSTALL) $(IFLAGS1) $^ $(DESTDIR)$(mozappdir)

endif
